---------------------------------------------------------------------------------------------------------------------------    
--REQUERIMIENTO 1: 
SET SERVEROUTPUT ON;

-- CREACIÓN DE TABLA INFORME_SUBIDA_COMISION
CREATE TABLE INFORME_SUBIDA_COMISION (
    MES_ANNIO_INFORME VARCHAR2(6),
    ID_EMPLEADO NUMBER,
    NOMBRE_COMPLETO VARCHAR2(100),
    COMISION NUMBER,
    SUELDO_ACTUAL NUMBER,
    PORCENTAJE_SUB NUMBER,
    NUEVA_COMISION NUMBER,
    CONSTRAINT INFORME_SUBIDA_COMISION_PK PRIMARY KEY (ID_EMPLEADO, MES_ANNIO_INFORME)
);

-- CREACIÓN DE TABLA RANGO_SUBIDA_COMISION
CREATE TABLE RANGO_SUBIDA_COMISION (
    ID_RANGOS NUMBER(5) PRIMARY KEY,
    INICIO NUMBER(15),
    FIN NUMBER(15),
    PORCENTAJE NUMBER(15)
);

-- INSERTAR RANGOS DE COMISIÓN
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (1, 1, 1200, 15);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (2, 1201, 2300, 20);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (3, 2301, 3500, 25);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (4, 3501, 4500, 30);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (5, 4501, 6500, 35);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (6, 6501, 8900, 40);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (7, 8901, 20000, 45);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (8, 20001, 40000, 50);
INSERT INTO RANGO_SUBIDA_COMISION (ID_RANGOS, INICIO, FIN, PORCENTAJE) VALUES (9, 40001, 400000000, 60);

-- PROCEDIMIENTO PL/SQL PARA CALCULAR Y ACTUALIZAR LAS NUEVAS COMISIONES
DECLARE
    -- Definir variables locales
    CURSOR cur_empleados IS
        SELECT e.EMPLEADO_ID, e.NOMBRE, e.APELLIDO, e.SUELDO,
               SUM(c.VALOR_COMISION) AS TOTAL_COMISION
        FROM EMPLEADOS e
        JOIN COMISIONES c ON e.EMPLEADO_ID = c.EMPLEADO_ID
        GROUP BY e.EMPLEADO_ID, e.NOMBRE, e.APELLIDO, e.SUELDO
        ORDER BY TOTAL_COMISION DESC;  -- Ordenamos por total de comisiones

    -- Definir variables para almacenar los datos de cada empleado
    v_empleado_id EMPLEADOS.EMPLEADO_ID%TYPE;
    v_nombre EMPLEADOS.NOMBRE%TYPE;
    v_apellido EMPLEADOS.APELLIDO%TYPE;
    v_sueldo EMPLEADOS.SUELDO%TYPE;
    v_total_comisiones NUMBER := 0;
    v_nueva_comision NUMBER;
    v_porcentaje_sub NUMBER;
    v_contador NUMBER := 0;  -- Contador para limitar a los tres primeros empleados

    -- Variables para obtener el porcentaje del rango
    v_rango_inicio NUMBER;
    v_rango_fin NUMBER;
    v_porcentaje NUMBER;

BEGIN
    -- Bucle sobre los empleados, solo procesamos los tres primeros
    FOR empleado IN cur_empleados LOOP
        -- Incrementamos el contador
        v_contador := v_contador + 1;
        
        -- Solo procesamos los primeros tres empleados
        IF v_contador > 3 THEN
            EXIT;  -- Salimos del ciclo cuando ya hemos procesado tres empleados
        END IF;
        
		-- Guardar los datos del empleado
        v_empleado_id := empleado.EMPLEADO_ID;
        v_nombre := empleado.NOMBRE;
        v_apellido := empleado.APELLIDO;
        v_sueldo := empleado.SUELDO;
        v_total_comisiones := empleado.TOTAL_COMISION;
        
		-- Obtener el rango de comisión desde la tabla RANGO_SUBIDA_COMISION
        SELECT INICIO, FIN, PORCENTAJE
        INTO v_rango_inicio, v_rango_fin, v_porcentaje
        FROM RANGO_SUBIDA_COMISION
        WHERE v_total_comisiones BETWEEN INICIO AND FIN;
       
	   -- Calcular la nueva comisión total
        v_nueva_comision := ROUND(v_total_comisiones * (1 + v_porcentaje / 100), 0);
      
	  -- Insertar el resultado en la tabla de informe
        INSERT INTO INFORME_SUBIDA_COMISION (MES_ANNIO_INFORME, ID_EMPLEADO, NOMBRE_COMPLETO, COMISION, SUELDO_ACTUAL, PORCENTAJE_SUB, NUEVA_COMISION)
        VALUES ('042023', v_empleado_id, v_nombre || ' ' || v_apellido, v_total_comisiones, v_sueldo, v_porcentaje, v_nueva_comision);
    END LOOP;
    
    -- Mostrar el mensaje final con el total de empleados procesados
    DBMS_OUTPUT.PUT_LINE('Procedimiento PL/SQL terminado correctamente. El total de empleados con comisiones es de ' || v_contador);
    
    COMMIT;
END;